// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/AptitudeTests" | "/AptitudeTests/TestPage" | "/AptitudeTests/index.new" | "/Auth/Login" | "/Auth/SignUp" | "/CSFundamentals" | "/CSFundamentals/CSFundamentals.clean" | "/CSFundamentals/index.clean" | "/CompanyList" | "/CompanyQuestions" | "/CompanyQuestions/CompanyQuestionsFixed" | "/CompanyQuestions/CompanyQuestionsFixed.backup" | "/CompanyQuestions/CompanyQuestionsFixed.clean" | "/CompanyQuestions/CompanyQuestionsFixed.new" | "/CompanyQuestions/index.new" | "/Dashboard" | "/Home/CreateSessionForm" | "/Home/Dashboard" | "/InterviewPrep/InterviewPrep" | "/InterviewPrep/components/AIResponsePreview" | "/InterviewPrep/components/RoleInfoHeader" | "/LandingPage" | "/ProgrammingMCQs" | "/ProgrammingMCQs/_index" | "/ResumeChecker"
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/AptitudeTests": {}
  "/AptitudeTests/index.new": {}
  "/AptitudeTests/TestPage": {}
  "/Auth/Login": {}
  "/Auth/SignUp": {}
  "/CompanyList": {}
  "/CompanyQuestions": {}
  "/CompanyQuestions/CompanyQuestionsFixed": {}
  "/CompanyQuestions/CompanyQuestionsFixed.backup": {}
  "/CompanyQuestions/CompanyQuestionsFixed.clean": {}
  "/CompanyQuestions/CompanyQuestionsFixed.new": {}
  "/CompanyQuestions/index.new": {}
  "/CSFundamentals": {}
  "/CSFundamentals/CSFundamentals.clean": {}
  "/CSFundamentals/index.clean": {}
  "/Dashboard": {}
  "/Home/CreateSessionForm": {}
  "/Home/Dashboard": {}
  "/InterviewPrep/components/AIResponsePreview": {}
  "/InterviewPrep/components/RoleInfoHeader": {}
  "/InterviewPrep/InterviewPrep": {}
  "/LandingPage": {}
  "/ProgrammingMCQs": {}
  "/ProgrammingMCQs/_index": {}
  "/ResumeChecker": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
